name: 'Publish Rovierr Desktop App'

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - release
    tags:
      - 'v*'

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
            target: 'aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
            target: 'x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
            target: 'x86_64-unknown-linux-gnu'
          - platform: 'windows-latest'
            args: ''
            target: 'x86_64-pc-windows-msvc'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './apps/web/src-tauri -> target'

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build web app for static export
        run: |
          cd apps/web
          pnpm run build

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: './apps/web'
          tagName: 'v__VERSION__'
          releaseName: 'Rovierr v__VERSION__'
          releaseBody: |
            ## 🎉 New Release: Rovierr v__VERSION__

            ### 📥 Downloads
            Choose the appropriate version for your operating system:

            **🍎 macOS:**
            - Apple Silicon (M1/M2/M3): `rovierr_aarch64.dmg`
            - Intel: `rovierr_x64.dmg`

            **🪟 Windows:**
            - 64-bit: `rovierr_x64_en-US.msi`

            **🐧 Linux:**
            - x64: `rovierr_amd64.AppImage`

            ### 🔧 Installation
            - **macOS**: Download the DMG, mount it, and drag Rovierr to Applications
            - **Windows**: Download the MSI and run it to install
            - **Linux**: Download the AppImage, make it executable (`chmod +x`), and run it

            ### 🚀 What's New
            See the assets below to download and install this version.
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

  # Separate job for Linux ARM builds (if needed)
  publish-linux-arm:
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    if: github.event_name == 'push' && (github.ref == 'refs/heads/release' || startsWith(github.ref, 'refs/tags/v'))

    strategy:
      matrix:
        arch: [aarch64]
        include:
          - arch: aarch64
            cpu: cortex-a72
            base_image: https://dietpi.com/downloads/images/DietPi_RPi5-ARMv8-Bookworm.img.xz
            appimage: aarch64

    steps:
      - uses: actions/checkout@v4

      - name: Cache rust build artifacts
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: apps/web/src-tauri
          cache-on-failure: true

      - name: Build ARM app
        uses: pguyot/arm-runner-action@v2.6.5
        with:
          base_image: ${{ matrix.base_image }}
          cpu: ${{ matrix.cpu }}
          bind_mount_repository: true
          image_additional_mb: 10240
          optimize_image: no
          commands: |
            # Prevent Rust from complaining about $HOME not matching eid home
            export HOME=/root

            # Workaround to CI worker being stuck on Updating crates.io index
            export CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse

            # Install setup prerequisites
            apt-get update -y --allow-releaseinfo-change
            apt-get autoremove -y
            apt-get install -y --no-install-recommends --no-install-suggests curl libwebkit2gtk-4.1-dev build-essential libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf libfuse2 file
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            . "$HOME/.cargo/env"
            curl -fsSL https://deb.nodesource.com/setup_lts.x | bash
            apt-get install -y nodejs
            npm install -g pnpm

            # Install frontend dependencies
            cd apps/web && pnpm install

            # Build the application
            pnpm run desktop:build -- --verbose

      - name: Get app version
        run: echo "APP_VERSION=$(jq -r .version apps/web/src-tauri/tauri.conf.json)" >> $GITHUB_ENV

      - name: Upload ARM AppImage
        uses: actions/upload-artifact@v4
        with:
          name: rovierr-linux-arm64
          path: ${{ github.workspace }}/apps/web/src-tauri/target/release/bundle/appimage/rovierr_${{ env.APP_VERSION }}_${{ matrix.appimage }}.AppImage
